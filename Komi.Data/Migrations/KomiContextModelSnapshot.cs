// <auto-generated />
using System;
using Komi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Komi.Data.Migrations
{
    [DbContext(typeof(KomiContext))]
    partial class KomiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Komi.Data.Models.Discord.Guild.Group", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationData", b =>
                {
                    b.Property<ulong>("ModerationDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModerationDataId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("ModerationData");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationSetting", b =>
                {
                    b.Property<ulong>("ModerationSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BanAt")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KickAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModerationSettingId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("ModerationSetting");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.WarningData", b =>
                {
                    b.Property<ulong>("WarningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ModId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ModerationDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WarningId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModerationDataId");

                    b.ToTable("WarningData");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.GroupSetting", b =>
                {
                    b.Property<ulong>("GroupSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupSettingId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("GroupSetting");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.Prefix", b =>
                {
                    b.Property<long>("PrefixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GroupSettingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PrefixId");

                    b.HasIndex("GroupSettingId");

                    b.ToTable("Prefix");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationData", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithOne("ModerationData")
                        .HasForeignKey("Komi.Data.Models.Moderation.ModerationData", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationSetting", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithOne("ModerationSettings")
                        .HasForeignKey("Komi.Data.Models.Moderation.ModerationSetting", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.WarningData", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Komi.Data.Models.Moderation.ModerationData", null)
                        .WithMany("Warnings")
                        .HasForeignKey("ModerationDataId");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.GroupSetting", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithOne("GroupSettings")
                        .HasForeignKey("Komi.Data.Models.Settings.GroupSetting", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.Prefix", b =>
                {
                    b.HasOne("Komi.Data.Models.Settings.GroupSetting", null)
                        .WithMany("Prefixes")
                        .HasForeignKey("GroupSettingId");
                });
#pragma warning restore 612, 618
        }
    }
}
