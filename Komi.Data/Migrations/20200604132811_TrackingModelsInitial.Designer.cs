// <auto-generated />
using System;
using Komi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Komi.Data.Migrations
{
    [DbContext(typeof(KomiContext))]
    [Migration("20200604132811_TrackingModelsInitial")]
    partial class TrackingModelsInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Komi.Data.Models.Discord.Guild.Group", b =>
                {
                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Komi.Data.Models.Discord.Guild.GroupMember", b =>
                {
                    b.Property<ulong>("GroupMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupMemberId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMember");
                });

            modelBuilder.Entity("Komi.Data.Models.Discord.User.Member", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Komi.Data.Models.Discord.User.User", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationData", b =>
                {
                    b.Property<ulong>("ModerationDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModerationDataId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("ModerationData");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationSetting", b =>
                {
                    b.Property<ulong>("ModerationSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BanAt")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KickAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModerationSettingId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("ModerationSetting");
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.WarningData", b =>
                {
                    b.Property<ulong>("WarningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ModId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ModerationDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WarningId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModerationDataId");

                    b.ToTable("WarningData");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.GroupSetting", b =>
                {
                    b.Property<ulong>("GroupSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TrackingChannel")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupSettingId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("GroupSetting");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.Prefix", b =>
                {
                    b.Property<long>("PrefixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GroupSettingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PrefixId");

                    b.HasIndex("GroupSettingId");

                    b.ToTable("Prefix");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.WorkTypeSetting", b =>
                {
                    b.Property<ulong>("WorkTypeSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GroupSettingId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkType")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkTypeSettingId");

                    b.HasIndex("GroupSettingId");

                    b.ToTable("WorkTypeSetting");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Job", b =>
                {
                    b.Property<ulong>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("WorkId")
                        .HasColumnType("INTEGER");

                    b.HasKey("JobId");

                    b.HasIndex("WorkId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Scanlation.Series", b =>
                {
                    b.Property<long>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeriesId");

                    b.HasIndex("GroupId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Scanlation.Work", b =>
                {
                    b.Property<ulong>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Chapter")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OverridenStatus")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SeriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Volume")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkId");

                    b.HasIndex("GroupId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Worker", b =>
                {
                    b.Property<ulong>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Finished")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Started")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkerId");

                    b.HasIndex("JobId");

                    b.ToTable("Worker");
                });

            modelBuilder.Entity("Komi.Data.Models.Discord.Guild.Group", b =>
                {
                    b.HasOne("Komi.Data.Models.Tracking.Worker", null)
                        .WithMany("Groups")
                        .HasForeignKey("WorkerId");
                });

            modelBuilder.Entity("Komi.Data.Models.Discord.Guild.GroupMember", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Komi.Data.Models.Discord.User.Member", "Member")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Discord.User.Member", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.User.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationData", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithOne("ModerationData")
                        .HasForeignKey("Komi.Data.Models.Moderation.ModerationData", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.ModerationSetting", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithOne("ModerationSettings")
                        .HasForeignKey("Komi.Data.Models.Moderation.ModerationSetting", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Moderation.WarningData", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Komi.Data.Models.Moderation.ModerationData", null)
                        .WithMany("Warnings")
                        .HasForeignKey("ModerationDataId");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.GroupSetting", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithOne("GroupSettings")
                        .HasForeignKey("Komi.Data.Models.Settings.GroupSetting", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.Prefix", b =>
                {
                    b.HasOne("Komi.Data.Models.Settings.GroupSetting", null)
                        .WithMany("Prefixes")
                        .HasForeignKey("GroupSettingId");
                });

            modelBuilder.Entity("Komi.Data.Models.Settings.WorkTypeSetting", b =>
                {
                    b.HasOne("Komi.Data.Models.Settings.GroupSetting", null)
                        .WithMany("DefaultWorkTypes")
                        .HasForeignKey("GroupSettingId");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Job", b =>
                {
                    b.HasOne("Komi.Data.Models.Tracking.Scanlation.Work", null)
                        .WithMany("Jobs")
                        .HasForeignKey("WorkId");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Scanlation.Series", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", null)
                        .WithMany("Projects")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Scanlation.Work", b =>
                {
                    b.HasOne("Komi.Data.Models.Discord.Guild.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Komi.Data.Models.Tracking.Scanlation.Series", null)
                        .WithMany("Works")
                        .HasForeignKey("SeriesId");
                });

            modelBuilder.Entity("Komi.Data.Models.Tracking.Worker", b =>
                {
                    b.HasOne("Komi.Data.Models.Tracking.Job", "Job")
                        .WithMany("Workers")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
